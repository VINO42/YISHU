<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.viono42</groupId>
    <artifactId>yishu-bootstrap</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <distributionManagement>
    </distributionManagement>
    <properties>
        <!--项目配置-->
        <java.version>8</java.version>
        <yishu.version>1.0-SNAPSHOT</yishu.version>
        <resource.delimiter>@</resource.delimiter>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <docker.build.creationTime.format>USE_CURRENT_TIMESTAMP</docker.build.creationTime.format>
        <docker.baseimage>dockerhub.com/vino42/alpine_jdk8:latest</docker.baseimage>
        <!--maven配置-->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-javadoc-plugin.version>3.3.1</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.compilerVersion>8</maven.compiler.compilerVersion>
        <maven.build.timestamp.format>yyyyMMdd-HHmmssSSS</maven.build.timestamp.format>
        <maven-checkstyle.version>3.1.2</maven-checkstyle.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <maven-install-plugin.version>3.0.1</maven-install-plugin.version>
        <!--Spring配置-->
        <spring-boot.version>2.7.4</spring-boot.version>
        <!--工具类库-->
        <hutool.version>5.8.5</hutool.version>
        <fastjson.version>1.2.83</fastjson.version>
        <fastjson2.version>2.0.11</fastjson2.version>
        <lombok.version>1.18.24</lombok.version>
        <commons-io.version>2.11.0</commons-io.version>
        <javassist.version>3.29.1-GA</javassist.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <okhttps.version>3.5.3</okhttps.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-codec.version>1.15</commons-codec.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <dom4j.version>2.1.3</dom4j.version>
        <jsoup.version>1.15.3</jsoup.version>
        <jackson.version>2.13.4</jackson.version>
        <zxing.version>3.5.0</zxing.version>
        <sneakythrow.version>1.2.0</sneakythrow.version>
        <poi.version>5.2.2</poi.version>
        <fst.version>3.0.3</fst.version>
        <asynchttpclient.version>2.12.3</asynchttpclient.version>
        <fourDimensionPocket.release.verion>1.0</fourDimensionPocket.release.verion>
        <netty.version>4.1.81.Final</netty.version>
        <cglib.version>3.3.0</cglib.version>
        <lombok.maven.version>1.18.24</lombok.maven.version>
        <hutool.version>5.8.6</hutool.version>
        <transmittable-thread-local.version>2.14.0</transmittable-thread-local.version>
        <disruptor.version>3.4.4</disruptor.version>
        <validation-api.version>3.0.2</validation-api.version>
        <!--开源组件类库-->
        <okhttp.version>4.10.0</okhttp.version>
        <log4j.version>2.18.0</log4j.version>
        <jedis.version>4.2.3</jedis.version>
        <seata.version>1.5.2</seata.version>
        <jasypt-spring-boot-starter.version>3.0.4</jasypt-spring-boot-starter.version>
        <hikaricp.version>5.0.0</hikaricp.version>
        <hibernate-validator.version>7.0.5.Final</hibernate-validator.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
        <jetcache.version>2.7.0</jetcache.version>
        <redisson-spring-boot-starter.version>3.17.6</redisson-spring-boot-starter.version>
        <jib-maven-plugin.version>3.2.1</jib-maven-plugin.version>
        <skywallking-client.version>8.11.0</skywallking-client.version>
        <nacos-client.version>2.1.1</nacos-client.version>
        <easy-captcha.version>1.6.2</easy-captcha.version>
        <alipay-sdk-java.version>4.33.1.ALL</alipay-sdk-java.version>
        <weixin-java-sdk.version>4.3.0</weixin-java-sdk.version>
        <mybatis-plus-boot-starter.version>3.5.2</mybatis-plus-boot-starter.version>
        <mybatis-plus.version>3.5.2</mybatis-plus.version>
        <mybatis.version>3.5.11</mybatis.version>
        <!--        <maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>-->
        <caffeine.version>3.1.1</caffeine.version>
        <netty-tcnative-boringssl-static.version>2.0.54.Final</netty-tcnative-boringssl-static.version>
        <sentinel.version>1.8.5</sentinel.version>
        <gson.version>2.9.1</gson.version>
        <guava.version>31.1-jre</guava.version>
        <orika.version>1.5.4</orika.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.8.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>3.2.0</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio-jvm</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>4.0.3</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-annotation-processor</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>5.3.22</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>${weixin-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>${weixin-java.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-annotation-processor</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ejlchina</groupId>
                <artifactId>okhttps-jackson</artifactId>
                <version>${okhttps.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ejlchina</groupId>
                <artifactId>okhttps-gson</artifactId>
                <version>${okhttps.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--Lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <!--测试依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-guava</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-afterburner</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <encoding>UTF-8</encoding>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <showWarnings>true</showWarnings>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <propertiesEncoding>UTF-8</propertiesEncoding>
                        <addDefaultExcludes>false</addDefaultExcludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--  <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-javadoc-plugin</artifactId>
                      <version>${maven-javadoc-plugin.version}</version>
                      <configuration>
                          <show>package</show>
                          <tags>
                              <tag>
                                  <name>date</name>
                              </tag>
                          </tags>
                      </configuration>
                      <executions>
                          <execution>
                              <id>attach-javadocs</id>
                              <phase>package</phase>
                              <goals>
                                  <goal>jar</goal>
                              </goals>
                              <configuration>
                                  <doclint>none</doclint>
                              </configuration>
                          </execution>
                      </executions>
                  </plugin>-->

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                        <layers>
                            <enabled>true</enabled>
                        </layers>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>${execut-phase}</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <from>
                            <image>${docker.baseimage}</image>
                            <auth>
                                <username>${docker.username}</username>
                                <password>${docker.password}</password>
                            </auth>
                        </from>
                        <to>
                            <image>${docker.registry.prefix}/${project.build.finalName}:${tag}</image>
                            <auth>
                                <username>${docker.username}</username>
                                <password>${docker.password}</password>
                            </auth>
                        </to>
                        <container>
                            <mainClass>${main.class}</mainClass>
                            <environment>
                                <spring.profiles.active>${spring.profiles.active}</spring.profiles.active>
                                <TZ>Asia/Shanghai</TZ>
                            </environment>

                            <jvmFlags>
                                <jvmFlag>${Xms}</jvmFlag>
                                <jvmFlag>${Xmx}</jvmFlag>
                                <jvmFlag>-Xss256k</jvmFlag>
                                <jvmFlag>-XX:SurvivorRatio=8</jvmFlag>
                                <jvmFlag>-XX:+UseG1GC</jvmFlag>
                                <!--指定标记线程的数量-->
                                <jvmFlag>-XX:ParallelGCThreads=2</jvmFlag>
                                <jvmFlag>-XX:ConcGCThreads=2</jvmFlag>
                                <!--关闭偏向锁-->
                                <jvmFlag>-XX:-UseBiasedLocking</jvmFlag>
                                <!--启动并发 GC 周期的（整个）堆占用百分比。它被 GC 使用，这些 GC 根据整个堆的占用情况触发并发 GC 周期，而不仅仅是一代（例如 G1）。值 0 表示“执行恒定的 GC 循环”。默认值为 45。-->
                                <jvmFlag>-XX:InitiatingHeapOccupancyPercent=60</jvmFlag>
                                <!--通过-XX:G1ReservePercent指定G1为分配担保预留的空间比例，默认10%。也就是老年代会预留10%的空间来给新生代的对象晋升，如果经常发生新生代晋升失败而导致Full GC，那么可以适当调高此阈值。但是调高此值同时也意味着降低了老年代的实际可用空间。-->
                                <jvmFlag>-XX:G1ReservePercent=20</jvmFlag>
                                <!--混合回收整理出来的空闲空间占heap的10时  就会停止该次的混合回收，默认5-->
                                <jvmFlag>-XX:G1HeapWastePercent=10</jvmFlag>
                                <!--在 G1 中，Java 堆被细分为大小一致的区域。这设置了各个细分的大小。此参数的默认值是根据堆大小以符合人体工程学的方式确定的。最小值为 1Mb，最大值为 32Mb。-->
                                <jvmFlag>-XX:G1HeapRegionSize=2m</jvmFlag>
                                <!---->
                                <jvmFlag>-XX:+UnlockExperimentalVMOptions</jvmFlag>
                                <!--设置新生代大小，最大60%，默认5%-->
                                <jvmFlag>-XX:G1NewSizePercent=10</jvmFlag>
                                <!--设置新生代大小，最大60%，默认5%-->
                                <jvmFlag>-XX:G1MaxNewSizePercent=50</jvmFlag>
                                <!--设置的存活对象占用率的阈值，默认为：85%-->
                                <jvmFlag>-XX:G1MixedGCLiveThresholdPercent=85</jvmFlag>
                                <!--混合回收目标次数-->
                                <jvmFlag>-XX:G1MixedGCCountTarget=8</jvmFlag>
                                <!--jdk8u20后 相同String避免重复申请内存 节约region使用-->
                                <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
                                <jvmFlag>-XX:MetaspaceSize=512m</jvmFlag>
                                <jvmFlag>-XX:MaxMetaspaceSize=512m</jvmFlag>
                                <jvmFlag>-Dlog.home=${log.home}/${project.build.finalName}</jvmFlag>
                                <jvmFlag>-Dlogbak.prefix=${project.build.finalName}</jvmFlag>
                                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                                <jvmFlag>-Dlll.service.tenantStamp=${TENANT_STAMP}</jvmFlag>
                                <jvmFlag>-Dlll.service.version=${LLL_SERVICE_VERSION}</jvmFlag>
                                <jvmFlag>-Dlll.service.contextPath=${LLL_SERVER_CONTEXT_PATH}</jvmFlag>
                                <jvmFlag>-Dlll.profile=${profiles.active}</jvmFlag>
                                <jvmFlag>-Dspring.security.strategy=MODE_INHERITABLETHREADLOCAL</jvmFlag>
                                <!--print-->
                                <jvmFlag>-XX:+PrintGCDetails</jvmFlag>
                                <jvmFlag>-XX:+PrintGCDateStamps</jvmFlag>
                                <jvmFlag>-XX:+PrintGCApplicationStoppedTime</jvmFlag>
                                <!--reactive-netty accesslog 开启-->
                                <jvmFlag>-Dreactor.netty.http.server.accessLogEnabled=true</jvmFlag>
                                <!--需要在jekins BUILD_OPTS=-Dtag=${DOCKER_TAG} -Dversion=1.0  ${BUILD_OPTS}  -->
                                <!--eflective setAccessible(true) disabled问题，是netty对java9及以上版本做了io.netty.tryReflectionSetAccessible是否为true的检查-->
                                <!--Reflective setAccessible(true) disabled问题，是netty对java9及以上版本做了io.netty.tryReflectionSetAccessible是否为true的检查-->
                                <jvmFlag>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmFlag>
                                <jvmFlag>--add-exports=java.base/jdk.internal.misc.Unsafe=ALL-UNNAMED</jvmFlag>
                                <jvmFlag>-Dio.netty.tryReflectionSetAccessible=true</jvmFlag>
                            </jvmFlags>
                            <ports>
                                <port>8080</port>
                            </ports>
                            <creationTime>${docker.build.creationTime.format}</creationTime>
                            <volumes>
                                <volume>/data/${project.build.finalName}</volume>
                            </volumes>
                        </container>
                        <allowInsecureRegistries>true</allowInsecureRegistries>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <testSource>${java.version}</testSource>
                    <testTarget>${java.version}</testTarget>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <profiles.active>local</profiles.active>
                <log.home>logs</log.home>
                <docker.registry.prefix>81.70.80.153:9528/dev</docker.registry.prefix>
                <docker.username>lll</docker.username>
                <docker.password>123456</docker.password>
                <execut-phase>deploy</execut-phase>
                <Xmx>-Xmx2048m</Xmx>
                <Xms>-Xms2048m</Xms>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <profiles.active>dev</profiles.active>
                <log.home>logs</log.home>
                <docker.registry.prefix>81.70.80.153:9528/dev</docker.registry.prefix>
                <docker.username>lll</docker.username>
                <docker.password>123456</docker.password>
                <execut-phase>package</execut-phase>
                <Xmx>-Xmx2048m</Xmx>
                <Xms>-Xms2048m</Xms>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profiles.active>prod</profiles.active>
                <docker.registry.prefix>81.70.80.153:9528/yishu</docker.registry.prefix>
                <log.home>logs</log.home>
                <docker.username>yishu</docker.username>
                <docker.password>123456</docker.password>
                <execut-phase>package</execut-phase>
                <Xmx>-Xmx2048m</Xmx>
                <Xms>-Xms2048m</Xms>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>stage</id>
            <properties>
                <profiles.active>stage</profiles.active>
                <docker.registry.prefix>81.70.80.153:9528/stage</docker.registry.prefix>
                <log.home>logs</log.home>
                <docker.username>yishu</docker.username>
                <docker.password>123456</docker.password>
                <execut-phase>package</execut-phase>
                <Xmx>-Xmx2048m</Xmx>
                <Xms>-Xms2048m</Xms>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>pre</id>
            <properties>
                <profiles.active>pre</profiles.active>
                <docker.registry.prefix>81.70.80.153:9528/test</docker.registry.prefix>
                <log.home>logs</log.home>
                <docker.username>yishu</docker.username>
                <docker.password>123456</docker.password>
                <execut-phase>package</execut-phase>
                <Xmx>-Xmx2048m</Xmx>
                <Xms>-Xms2048m</Xms>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>